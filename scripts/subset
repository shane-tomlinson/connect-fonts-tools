#!/usr/bin/env node

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

const path          = require('path'),
      subset        = require('../lib/subset'),
      SUPPORTED_SUBSETS
                    = ['all'].concat(subset.SUPPORTED_SUBSETS),
      optimist      = require('optimist')
                          .describe('s', 'subset to create. Valid subsets: \n\t' + SUPPORTED_SUBSETS.join(',\n\t') + 
                          '\nCombination subsets are created by joining subset names with `+`. e.g.: latin+cyrillic, ')
                          .demand('s')
                          .usage('usage: ' + path.basename(__filename) +
                                ' <filename> <target_dir> -s <subset>')
      argv          = optimist.argv;

var sourcePath = path.resolve(__dirname, argv._[0]);
var targetPath = path.resolve(__dirname, argv._[1]);

if (!(sourcePath && targetPath)) {
  optimist.showHelp();
  process.exit(1);
}

// check subsets
var declaredSubsets = argv.s.split('+');
declaredSubsets.forEach(checkSubset);
function checkSubset(subset) {
  if (SUPPORTED_SUBSETS.indexOf(subset) === -1) {
    optimist.showHelp();
    process.exit(1);
  }
}

var subsets = [].concat(SUPPORTED_SUBSETS);
if (argv.s === 'all') {
  subsets.splice(subsets.indexOf('all'), 1);
}
else {
  subsets = [argv.s];
}

subset.subset(subsets, sourcePath, targetPath, function(err) {
  if (err) {
    console.error(String(err));
    process.exit(1);
  }
});

