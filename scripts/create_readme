#!/usr/bin/env node

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */


const path          = require('path'),
      gen_readme    = require('../lib/generate_readme'),
      licenses      = require('../lib/licenses').licenses,
      generic_config        
                    = require('../lib/generic_config')
      configurator  = require('../lib/configurator')
      program       = require('commodore')
                          .option('-l, --license <license>', 'Font License: ' + Object.keys(licenses).join(', '))
                          .demand('l')
                          .option('--fn <font_names>', 'font name(s) - comma separated list if more than one')
                          .demand('fn')
                          .option('--ff <font_family>', 'font family')
                          .demand('ff')
                          .option('--an <author_name>', 'Author name')
                          .loadable('an')
                          .demand('an')
                          .option('--ae <author_email>', 
                              'Author email(s) - comma separated list if more than one')
                          .loadable('ae')
                          .demand('ae')
                          .option('--au <author_urls>', 
                              'Author url(s) - comma separated list if more than one')
                          .loadable('au')
                          .option('--at <author_twitter>', 'Author twitter')
                          .loadable('at')
                          .option('--ag <author_github>', 'Author github')
                          .loadable('ag')
                          .option('--pn <package_name>', 'Package name')
                          .demand('pn')
                          .option('--ph <project_homepage_url>', 'Project homepage URL')
                          .option('--pr <project_repo_url>', 'Project repo URL')
                          .option('--pb <project_bugtracker_url>', 'Project bug tracker URL')
                          .option('-c <credits>', 'Credits')
                          .option('--tp <target_path>', 'Target Path')
                          .demand('tp')
                          .load(generic_config.config_path)
                          .parse(process.argv);

program.target_dir = generic_config.resolve(process.cwd(), program.tp);

if (!licenses[program.license]) {
  program.outputHelp();
  process.exit(1);
}


configurator(program, undefined, function(err, config) {
  gen_readme.write(config);
});


